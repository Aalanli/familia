type @t0 = {a: i32, b: i32}
type @t1 = {a: @t0, b: i32}
fn @f0(%0: @t0, %1: @t1): i32 {
 %2: i32 = getattr[@a, idx=Some(0)](%0: @t0)
 %3: @t0 = getattr[@a, idx=Some(0)](%1: @t1)
 %4: i32 = getattr[@b, idx=Some(1)](%3: @t0)
 %5: i32 = add(%2: i32, %4: i32)
 return(%5: i32)
}  
fn @f1(): () {
 %6: i32 = constant(1)
 %7: i32 = constant(2)
 %8: {a: i32, b: i32} = struct_ctor(%6: i32, %7: i32)
 %9: i32 = constant(3)
 %10: i32 = constant(4)
 %11: {a: i32, b: i32} = struct_ctor(%9: i32, %10: i32)
 %12: i32 = constant(5)
 %13: {a: {a: i32, b: i32}, b: i32} = struct_ctor(%11: {a: i32, b: i32}, %12: i32)
 %14: i32 = call @f0(%8: {a: i32, b: i32}, %13: {a: {a: i32, b: i32}, b: i32})
}  
